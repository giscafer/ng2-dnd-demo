{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.router.ts","webpack:///./src/app/examples/demo-dnd.router.ts","webpack:///./src/app/examples/dnd/custom-data/custom-data.component.ts","webpack:///./src/app/examples/dnd/custom-function/custom-function.component.ts","webpack:///./src/app/examples/dnd/shopping-basket/shopping-basket.component.ts","webpack:///./src/app/examples/dnd/simple/simple.component.ts","webpack:///./src/app/examples/dnd/zone/zone.component.ts","webpack:///./src/app/examples/sortable/embedded/embedded.component.ts","webpack:///./src/app/examples/sortable/multi/multi.component.ts","webpack:///./src/app/examples/sortable/recycle-multi/recycle-multi.component.ts","webpack:///./src/app/examples/sortable/simple-sortable-copy/simple-sortable-copy.component.ts","webpack:///./src/app/examples/sortable/simple/simple.component.ts","webpack:///./src/app/examples/sortable/target-sortable/target-sortable.component.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/dnd/dnd.config.ts","webpack:///./src/dnd/dnd.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/examples/dnd/simple/simple.component.ts?8978","webpack:///./src/app/shared/side-nav/side-nav.component.html","webpack:///./src/dnd/abstract.component.ts","webpack:///./src/dnd/dnd.utils.ts","webpack:///./src/app/examples/dnd/simple/index.ts","webpack:///./src/app/examples/index.ts","webpack:///./src/app/shared/side-nav/side-nav.component.ts","webpack:///./src/dnd/dnd.module.ts","webpack:///./src/dnd/draggable.component.ts","webpack:///./src/dnd/droppable.component.ts","webpack:///./src/dnd/sortable.component.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./examples/index\": [\n\t\t71\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nmodule.exports = webpackAsyncContext;\nwebpackAsyncContext.id = 103;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 103\n// module chunks = 1","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app works!';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n/* Import prism core */\r\nimport 'prismjs/prism';\r\n\r\n/* Import the language you need to highlight */\r\nimport 'prismjs/components/prism-typescript';\r\n\r\nimport { routes } from './app.router';\r\n\r\nimport { SharedModule } from './shared';\r\nimport { DemoDndModule } from './examples';\r\nimport { AppComponent } from './app.component';\r\nimport { DndModule } from 'dnd/dnd.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    SharedModule,\r\n    RouterModule.forRoot(routes, { useHash: true }),\r\n    DndModule.forRoot(),\r\n    DemoDndModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes, Route } from '@angular/router';\r\n\r\nexport const routes: Routes = [\r\n    { path: '', loadChildren: './examples/index#DemoDndModule' },\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.router.ts","import { Routes, Route } from '@angular/router';\r\n\r\nimport { SimpleDemoComponent, DndSimpleComponent } from './dnd/simple';\r\nimport { ZoneComponent } from './dnd/zone/zone.component';\r\nimport { CustomDataComponent } from './dnd/custom-data/custom-data.component';\r\nimport { CustomFunctionComponent } from './dnd/custom-function/custom-function.component';\r\nimport { ShoppingBasketComponent } from './dnd/shopping-basket/shopping-basket.component';\r\n\r\nimport { SimpleComponent } from './sortable/simple/simple.component';\r\nimport { MultiComponent } from './sortable/multi/multi.component';\r\nimport { RecycleMultiComponent } from './sortable/recycle-multi/recycle-multi.component';\r\nimport { EmbeddedComponent} from './sortable/embedded/embedded.component';\r\nimport { SimpleSortableCopyComponent } from './sortable/simple-sortable-copy/simple-sortable-copy.component';\r\nimport { TargetSortableComponent } from './sortable/target-sortable/target-sortable.component';\r\n\r\nexport const dndComponents = [SimpleDemoComponent, SimpleComponent, ZoneComponent, CustomDataComponent, CustomFunctionComponent, ShoppingBasketComponent];\r\nexport const sortableComponents = [SimpleComponent, MultiComponent, RecycleMultiComponent, EmbeddedComponent, SimpleSortableCopyComponent,TargetSortableComponent];\r\n\r\nexport const routes: Routes = [\r\n    { path: '', pathMatch: 'full', redirectTo: 'dnd-zone' },\r\n\r\n    { path: 'dnd-simple', component: SimpleDemoComponent },\r\n    { path: 'dnd-zone', component: ZoneComponent },\r\n    { path: 'dnd-custom-data', component: CustomDataComponent },\r\n    { path: 'dnd-custom-function', component: CustomFunctionComponent },\r\n    { path: 'dnd-shopping-basket', component: ShoppingBasketComponent },\r\n\r\n    { path: 'sortable-simple', component: SimpleComponent },\r\n    { path: 'target-sortable', component: TargetSortableComponent },\r\n    { path: 'sortable-recycle-multi', component: RecycleMultiComponent },\r\n    { path: 'sortable-simple-copy', component: SimpleSortableCopyComponent },\r\n    { path: 'sortable-multi', component: MultiComponent },\r\n    { path: 'sortable-embedded', component: EmbeddedComponent }\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/demo-dnd.router.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'custom-data',\r\n    template: `\r\n<h4>Transfer custom data in Drag-and-Drop</h4>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"panel panel-success\">\r\n            <div class=\"panel-heading\">Available to drag</div>\r\n            <div class=\"panel-body\">\r\n                <div class=\"panel panel-default\" dnd-draggable [dragEnabled]=\"true\" [dragData]=\"transferData\">\r\n                    <div class=\"panel-body\">\r\n                        <div>Drag Me</div>\r\n                        <div>{{transferData | json}}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n        <div dnd-droppable class=\"panel panel-info\" (onDropSuccess)=\"transferDataSuccess($event)\">\r\n            <div class=\"panel-heading\">Place to drop (Items:{{receivedData.length}})</div>\r\n            <div class=\"panel-body\">\r\n                <div [hidden]=\"!receivedData.length > 0\" *ngFor=\"let data of receivedData\">{{data | json}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class CustomDataComponent {\r\n    transferData: Object = {id: 1, msg: 'Hello'};\r\n    receivedData: Array<any> = [];\r\n\r\n    transferDataSuccess($event: any) {\r\n        this.receivedData.push($event);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/dnd/custom-data/custom-data.component.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'custom-function',\r\n    template: `\r\n<h4>Use a custom function to determine where dropping is allowed</h4>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"panel panel-success\">\r\n            <div class=\"panel-heading\">Available to drag</div>\r\n            <div class=\"panel-body\">\r\n                <div class=\"panel panel-default\" dnd-draggable [dragData]=\"6\">\r\n                    <div class=\"panel-body\">dragData = 6</div>\r\n                </div>\r\n                <div class=\"panel panel-default\" dnd-draggable [dragData]=\"10\">\r\n                    <div class=\"panel-body\">dragData = 10</div>\r\n                </div>\r\n                <div class=\"panel panel-default\" dnd-draggable [dragData]=\"30\">\r\n                    <div class=\"panel-body\">dragData = 30</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n        <pre>allowDropFunction(baseInteger: any): any {{ '{' }}\r\n  return (dragData: any) => dragData % baseInteger === 0;\r\n{{ '}' }}</pre>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6\">\r\n                <div dnd-droppable class=\"panel panel-info\" [allowDrop]=\"allowDropFunction(box1Integer)\" (onDropSuccess)=\"addTobox1Items($event)\">\r\n                    <div class=\"panel-heading\">\r\n                        Multiples of\r\n                        <input type=\"number\" [(ngModel)]=\"box1Integer\" style=\"width: 4em\">\r\n                        only\r\n                    </div>\r\n                    <div class=\"panel-body\">\r\n                        <div *ngFor=\"let item of box1Items\">dragData = {{item}}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <div dnd-droppable class=\"panel panel-warning\" [allowDrop]=\"allowDropFunction(box2Integer)\" (onDropSuccess)=\"addTobox2Items($event)\">\r\n                    <div class=\"panel-heading\">\r\n                        Multiples of\r\n                        <input type=\"number\" [(ngModel)]=\"box2Integer\" style=\"width: 4em\">\r\n                        only\r\n                    </div>\r\n                    <div class=\"panel-body\">\r\n                        <div *ngFor=\"let item of box2Items\">dragData = {{item}}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n`\r\n})\r\nexport class CustomFunctionComponent {\r\n    box1Integer: number = 3;\r\n    box2Integer: number = 10;\r\n\r\n    box1Items: string[] = [];\r\n    box2Items: string[] = [];\r\n\r\n    allowDropFunction(baseInteger: number): any {\r\n        return (dragData: any) => dragData % baseInteger === 0;\r\n    }\r\n\r\n    addTobox1Items($event: any) {\r\n        this.box1Items.push($event.dragData);\r\n    }\r\n\r\n    addTobox2Items($event: any) {\r\n        this.box2Items.push($event.dragData);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/dnd/custom-function/custom-function.component.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'shoping-basket',\r\n    template: `\r\n<h4>Drag-and-Drop - Shopping basket</h4>\r\n<div class=\"row\">\r\n\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"panel panel-success\">\r\n            <div class=\"panel-heading\">Available products</div>\r\n            <div class=\"panel-body\">\r\n                <div *ngFor=\"let product of availableProducts\" class=\"panel panel-default\"\r\n                    dnd-draggable [dragEnabled]=\"product.quantity>0\" [dragData]=\"product\" (onDragSuccess)=\"orderedProduct($event)\" [dropZones]=\"['demo1']\">\r\n                    <div class=\"panel-body\">\r\n                        <div [hidden]=\"product.quantity===0\">{{product.name}} - \\${{product.cost}}<br>(available: {{product.quantity}})</div>\r\n                        <div [hidden]=\"product.quantity>0\"><del>{{product.name}}</del><br>(NOT available)</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n        <div dnd-droppable (onDropSuccess)=\"addToBasket($event)\" [dropZones]=\"['demo1']\" class=\"panel panel-info\">\r\n            <div class=\"panel-heading\">Shopping Basket<br>(to pay: \\${{totalCost()}})</div>\r\n            <div class=\"panel-body\">\r\n                <div *ngFor=\"let product of shoppingBasket\" class=\"panel panel-default\">\r\n                    <div class=\"panel-body\">\r\n                    {{product.name}}<br>(ordered: {{product.quantity}}<br>cost: \\${{product.cost * product.quantity}})\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class ShoppingBasketComponent {\r\n    availableProducts: Array<Product> = [];\r\n    shoppingBasket: Array<Product> = [];\r\n\r\n    constructor() {\r\n        this.availableProducts.push(new Product('Blue Shoes', 3, 35));\r\n        this.availableProducts.push(new Product('Good Jacket', 1, 90));\r\n        this.availableProducts.push(new Product('Red Shirt', 5, 12));\r\n        this.availableProducts.push(new Product('Blue Jeans', 4, 60));\r\n    }\r\n\r\n    orderedProduct($event: any) {\r\n        let orderedProduct: Product = $event.dragData;\r\n        orderedProduct.quantity--;\r\n    }\r\n\r\n    addToBasket($event: any) {\r\n        let newProduct: Product = $event.dragData;\r\n        for (let indx in this.shoppingBasket) {\r\n            let product: Product = this.shoppingBasket[indx];\r\n            if (product.name === newProduct.name) {\r\n                product.quantity++;\r\n                return;\r\n            }\r\n        }\r\n        this.shoppingBasket.push(new Product(newProduct.name, 1, newProduct.cost));\r\n        this.shoppingBasket.sort((a: Product, b: Product) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n    }\r\n\r\n    totalCost(): number {\r\n        let cost: number = 0;\r\n        for (let indx in this.shoppingBasket) {\r\n            let product: Product = this.shoppingBasket[indx];\r\n            cost += (product.cost * product.quantity);\r\n        }\r\n        return cost;\r\n    }\r\n}\r\n\r\nclass Product {\r\n  constructor(public name: string, public quantity: number, public cost: number) {}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/dnd/shopping-basket/shopping-basket.component.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'dnd-simple',\r\n    template: `\r\n<h4>Simple Drag-and-Drop</h4>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"card border-dark mb-3\">\r\n            <div class=\"card-header\">Available to drag</div>\r\n            <div class=\"card-body text-dark\">\r\n\r\n                <div class=\"card text-white bg-primary mb-3\" style=\"max-width: 20rem;\" \r\n                    dnd-draggable [dragEnabled]=\"true\">\r\n                    <div class=\"card-body\">\r\n                        <p class=\"card-text\">Drag Me</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"card border-info mb-3\" style=\"max-width: 20rem;\">\r\n            <div class=\"card-header\">Place to drop</div>\r\n            <div class=\"card-body text-info\" \r\n                    dnd-droppable (onDropSuccess)=\"simpleDrop=simpleDrop + 1\">\r\n                <p class=\"card-text\" *ngIf=\"simpleDrop\">Dropped {{simpleDrop}} times</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class DndSimpleComponent {\r\n    simpleDrop: number = 0;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/dnd/simple/simple.component.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'zone',\r\n    template: `\r\n<h4>Restricted Drag-and-Drop with zones</h4>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"panel panel-primary\">\r\n            <div class=\"panel-heading\">Available to drag</div>\r\n            <div class=\"panel-body\">\r\n                <div class=\"panel panel-default\" dnd-draggable [dragEnabled]=\"true\" [dropZones]=\"['zone1']\">\r\n                    <div class=\"panel-body\">\r\n                        <div>Drag Me</div>\r\n                        <div>Zone 1 only</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"panel panel-success\">\r\n            <div class=\"panel-heading\">Available to drag</div>\r\n            <div class=\"panel-body\">\r\n                <div class=\"panel panel-default\" dnd-draggable [dragEnabled]=\"true\" [dropZones]=\"['zone1', 'zone2']\">\r\n                    <div class=\"panel-body\">\r\n                        <div>Drag Me</div>\r\n                        <div>Zone 1 & 2</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n        <div dnd-droppable class=\"panel panel-info\" [dropZones]=\"['zone1']\" (onDropSuccess)=\"restrictedDrop1=$event\">\r\n            <div class=\"panel-heading\">Zone 1</div>\r\n            <div class=\"panel-body\">\r\n                <div *ngIf=\"restrictedDrop1\">Item was dropped here</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n        <div dnd-droppable class=\"panel panel-warning\" [dropZones]=\"['zone2']\" (onDropSuccess)=\"restrictedDrop2=$event\">\r\n            <div class=\"panel-heading\">Zone 2</div>\r\n            <div class=\"panel-body\">\r\n                <div *ngIf=\"restrictedDrop2\">Item was dropped here</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class ZoneComponent {\r\n    restrictedDrop1: any = null;\r\n    restrictedDrop2: any = null;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/dnd/zone/zone.component.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'embedded',\r\n    template: `\r\n<h4>Move items between multi list sortable containers</h4>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n        Drag Containers <input type=\"checkbox\" [(ngModel)]=\"dragOperation\"/>\r\n        <div dnd-sortable-container [sortableData]=\"containers\" [dropZones]=\"['container-dropZone']\">\r\n            <div class=\"col-sm3\"\r\n                    *ngFor=\"let container of containers; let i = index\"\r\n                    dnd-sortable [sortableIndex]=\"i\" [dragEnabled]=\"dragOperation\">\r\n                <div class=\"panel panel-warning\"\r\n                    dnd-sortable-container [sortableData]=\"container.widgets\" [dropZones]=\"['widget-dropZone']\">\r\n                    <div class=\"panel-heading\">\r\n                        {{container.id}} - {{container.name}}\r\n                    </div>\r\n                    <div class=\"panel-body\">\r\n                        <ul class=\"list-group\">\r\n                            <li *ngFor=\"let widget of container.widgets; let x = index\" class=\"list-group-item\"\r\n                                dnd-sortable [sortableIndex]=\"x\" [dragEnabled]=\"!dragOperation\"\r\n                                [dragData]=\"widget\">{{widget.name}}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"panel panel-info\">\r\n            <div class=\"panel-heading\">Widgets</div>\r\n            <div class=\"panel-body\" dnd-droppable (onDropSuccess)=\"addTo($event)\" [dropZones]=\"['widget-dropZone']\">\r\n                <div *ngFor=\"let widget of widgets\" class=\"panel panel-default\">\r\n                    <div class=\"panel-body\">\r\n                        {{widget.name}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class EmbeddedComponent {\r\n    dragOperation: boolean = false;\r\n\r\n    containers: Array<Container> = [\r\n        new Container(1, 'Container 1', [new Widget('1'), new Widget('2')]),\r\n        new Container(2, 'Container 2', [new Widget('3'), new Widget('4')]),\r\n        new Container(3, 'Container 3', [new Widget('5'), new Widget('6')])\r\n    ];\r\n\r\n    widgets: Array<Widget> = [];\r\n    addTo($event: any) {\r\n        if ($event) {\r\n            this.widgets.push($event.dragData);\r\n        }\r\n    }\r\n}\r\n\r\nclass Container {\r\n  constructor(public id: number, public name: string, public widgets: Array<Widget>) {}\r\n}\r\n\r\nclass Widget {\r\n  constructor(public name: string) {}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/sortable/embedded/embedded.component.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'multi',\r\n    template: `\r\n<h4>Multi list sortable</h4>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n    <div class=\"panel panel-warning\">\r\n        <div class=\"panel-heading\">\r\n        Available boxers\r\n        </div>\r\n        <div class=\"panel-body\" dnd-sortable-container [dropZones]=\"['boxers-zone']\" [sortableData]=\"listBoxers\">\r\n            <ul class=\"list-group\" >\r\n                <li *ngFor=\"let item of listBoxers; let i = index\" class=\"list-group-item\" dnd-sortable [sortableIndex]=\"i\">{{item}}</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n    <div class=\"panel panel-success\">\r\n        <div class=\"panel-heading\">\r\n        First Team\r\n        </div>\r\n        <div class=\"panel-body\" dnd-sortable-container [dropZones]=\"['boxers-zone']\" [sortableData]=\"listTeamOne\">\r\n            <ul class=\"list-group\" >\r\n                <li *ngFor=\"let item of listTeamOne; let i = index\" class=\"list-group-item\" dnd-sortable [sortableIndex]=\"i\">{{item}}</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n    <div class=\"panel panel-info\">\r\n        <div class=\"panel-heading\">\r\n        Second Team\r\n        </div>\r\n        <div class=\"panel-body\" dnd-sortable-container [dropZones]=\"['boxers-zone']\" [sortableData]=\"listTeamTwo\">\r\n            <ul class=\"list-group\">\r\n                <li *ngFor=\"let item of listTeamTwo; let i = index\" class=\"list-group-item\" dnd-sortable [sortableIndex]=\"i\">{{item}}</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class MultiComponent {\r\n    listBoxers: Array<string> = ['Sugar Ray Robinson', 'Muhammad Ali', 'George Foreman', 'Joe Frazier', 'Jake LaMotta', 'Joe Louis', 'Jack Dempsey', 'Rocky Marciano', 'Mike Tyson', 'Oscar De La Hoya'];\r\n    listTeamOne: Array<string> = [];\r\n    listTeamTwo: Array<string> = [];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/sortable/multi/multi.component.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'recycle-multi',\r\n    template: `\r\n<h4>Simple sortable With Drop into recycle bin</h4>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"panel panel-success\">\r\n            <div class=\"panel-heading\">\r\n                Favorite drinks\r\n            </div>\r\n            <div class=\"panel-body\" dnd-sortable-container [sortableData]=\"listOne\" [dropZones]=\"['delete-dropZone']\">\r\n                <ul class=\"list-group\">\r\n                    <li *ngFor=\"let item of listOne; let i = index\" class=\"list-group-item\"\r\n                    dnd-sortable [sortableIndex]=\"i\">{{item}}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-body\" dnd-sortable-container [dropZones]=\"['delete-dropZone']\" [sortableData]=\"listRecycled\">\r\n                Recycle bin: Drag into me to delete it<br/>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"listRecycled.length\">\r\n        <b>Recycled:</b> <span>{{listRecycled.toString()}} </span>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class RecycleMultiComponent {\r\n    listOne: Array<string> = ['Coffee', 'Orange Juice', 'Red Wine', 'Unhealty drink!', 'Water'];\r\n    listRecycled: Array<string> = [];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/sortable/recycle-multi/recycle-multi.component.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'simple-sortable-copy',\r\n    template: `\r\n<h4>Simple sortable With Drop into something, without delete it</h4>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"panel panel-warning\"\r\n            dnd-sortable-container [sortableData]=\"sourceList\" [dropZones]=\"['source-dropZone']\">\r\n            <div class=\"panel-heading\">Source List</div>\r\n            <div class=\"panel-body\">\r\n                <ul class=\"list-group\">\r\n                    <li *ngFor=\"let source of sourceList; let x = index\" class=\"list-group-item\"\r\n                        dnd-sortable [sortableIndex]=\"x\" [dragEnabled]=\"true\"\r\n                        [dragData]=\"source\">{{source.name}}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"panel panel-info\">\r\n            <div class=\"panel-heading\">Target List</div>\r\n            <div class=\"panel-body\" dnd-droppable (onDropSuccess)=\"addTo($event)\" [dropZones]=\"['source-dropZone']\">\r\n                <ul class=\"list-group\">\r\n                    <li *ngFor=\"let target of targetList\" class=\"list-group-item\">\r\n                        {{target.name}}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class SimpleSortableCopyComponent {\r\n\r\n    sourceList: Widget[] = [\r\n        new Widget('1'), new Widget('2'),\r\n        new Widget('3'), new Widget('4'),\r\n        new Widget('5'), new Widget('6')\r\n    ];\r\n\r\n    targetList: Widget[] = [];\r\n    addTo($event: any) {\r\n        this.targetList.push($event.dragData);\r\n    }\r\n}\r\n\r\nclass Widget {\r\n  constructor(public name: string) {}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/sortable/simple-sortable-copy/simple-sortable-copy.component.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'simple',\r\n    template: `\r\n<h4>Simple sortable</h4>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"panel panel-success\">\r\n            <div class=\"panel-heading\">\r\n                Favorite drinks\r\n            </div>\r\n            <div class=\"panel-body\">\r\n                <ul class=\"list-group\" dnd-sortable-container [sortableData]=\"listOne\">\r\n                    <li *ngFor=\"let item of listOne; let i = index\" class=\"list-group-item\" dnd-sortable [sortableIndex]=\"i\">{{item}}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-body\">\r\n                My prefences:<br/>\r\n                <span *ngFor=\"let item of listOne; let i = index\">{{i + 1}}) {{item}}<br/></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class SimpleComponent {\r\n    listOne: Array<string> = ['Coffee', 'Orange Juice', 'Red Wine', 'Unhealty drink!', 'Water'];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/sortable/simple/simple.component.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'target-sortable',\r\n    template: `\r\n    <h4>Sorting in droppable list</h4>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-3\">\r\n            <div class=\"panel panel-warning\">\r\n                <div class=\"panel-heading\">\r\n                Available boxers\r\n                </div>\r\n                <div class=\"panel-body\" dnd-sortable-container [dropZones]=\"['boxers-zone']\" [sortableData]=\"listBoxers\" id=\"1\" [dragCopy]=\"true\">\r\n                    <ul class=\"list-group\" >\r\n                        <li *ngFor=\"let item of listBoxers; let i = index\" class=\"list-group-item\" dnd-sortable [sortableIndex]=\"i\"  id=\"1\">{{item}}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <div class=\"panel panel-success\">\r\n                <div class=\"panel-heading\">\r\n                Target List\r\n                </div>\r\n                <div class=\"panel-body\" dnd-sortable-container [dropZones]=\"['boxers-zone']\" [sortableData]=\"listTeamOne\"  id=\"2\">\r\n                    <ul class=\"list-group\" >\r\n                        <li *ngFor=\"let item of listTeamOne; let i = index\" class=\"list-group-item\" dnd-sortable [sortableIndex]=\"i\" id=\"2\">{{item}}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>`\r\n})\r\nexport class TargetSortableComponent {\r\n    listBoxers: Array<string> = ['Sugar Ray Robinson', 'Muhammad Ali', 'George Foreman', 'Joe Frazier', 'Jake LaMotta', 'Joe Louis', 'Jack Dempsey', 'Rocky Marciano', 'Mike Tyson', 'Oscar De La Hoya'];\r\n    listTeamOne: Array<string> = [];\r\n    listTeamTwo: Array<string> = [];\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/sortable/target-sortable/target-sortable.component.ts","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {JsonpModule} from '@angular/http';\r\n\r\n// import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n// import {ComponentWrapper} from './component-wrapper/component-wrapper.component';\r\n// import {PageWrapper} from './page-wrapper/page-wrapper.component';\r\nimport {SideNavComponent} from './side-nav/side-nav.component';\r\n// import {Analytics} from './analytics/analytics';\r\n\r\nexport {componentsList} from './side-nav/side-nav.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule],\r\n  exports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    // ComponentWrapper,\r\n    // PageWrapper,\r\n    SideNavComponent,\r\n    // NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    JsonpModule\r\n  ],\r\n  declarations: [\r\n    // ComponentWrapper,\r\n    // PageWrapper,\r\n    SideNavComponent,\r\n  ],\r\n//   providers: [Analytics]\r\n})\r\nexport class SharedModule {\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/index.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport {isString} from './dnd.utils';\r\n\r\nexport class DataTransferEffect {\r\n\r\n    static COPY = new DataTransferEffect('copy');\r\n    static LINK = new DataTransferEffect('link');\r\n    static MOVE = new DataTransferEffect('move');\r\n    static NONE = new DataTransferEffect('none');\r\n\r\n    constructor(public name: string) { }\r\n}\r\n\r\nexport class DragImage {\r\n    constructor(\r\n        public imageElement: any,\r\n        public x_offset: number = 0,\r\n        public y_offset: number = 0) {\r\n            if (isString(this.imageElement)) {\r\n                // Create real image from string source\r\n                let imgScr: string = <string>this.imageElement;\r\n                this.imageElement = new HTMLImageElement();\r\n                (<HTMLImageElement>this.imageElement).src = imgScr;\r\n            }\r\n        }\r\n}\r\n\r\nexport class DragDropConfig {\r\n    public onDragStartClass: string = \"dnd-drag-start\";\r\n    public onDragEnterClass: string = \"dnd-drag-enter\";\r\n    public onDragOverClass: string = \"dnd-drag-over\";\r\n    public onSortableDragClass: string = \"dnd-sortable-drag\";\r\n\r\n    public dragEffect: DataTransferEffect = DataTransferEffect.MOVE;\r\n    public dropEffect: DataTransferEffect = DataTransferEffect.MOVE;\r\n    public dragCursor: string = \"move\";\r\n    public dragImage: DragImage;\r\n    public defaultCursor: string = \"pointer\";\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/dnd/dnd.config.ts","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport {Injectable, EventEmitter} from '@angular/core';\r\n\r\nimport {DragDropConfig} from './dnd.config';\r\nimport {isPresent} from './dnd.utils';\r\nimport {SortableContainer} from './sortable.component';\r\n\r\nexport class DragDropData {\r\n    dragData: any;\r\n    mouseEvent: MouseEvent;\r\n}\r\n\r\nexport function dragDropServiceFactory(): DragDropService  {\r\n    return new DragDropService();\r\n}\r\n\r\n@Injectable()\r\nexport class DragDropService {\r\n    allowedDropZones: Array<string> = [];\r\n    onDragSuccessCallback: EventEmitter<DragDropData>;\r\n    dragData: any;\r\n    isDragged: boolean;\r\n}\r\n\r\nexport function dragDropSortableServiceFactory(config: DragDropConfig): DragDropSortableService  {\r\n    return new DragDropSortableService(config);\r\n}\r\n\r\n@Injectable()\r\nexport class DragDropSortableService {\r\n    index: number;\r\n    sortableContainer: SortableContainer;\r\n    isDragged: boolean;\r\n\r\n    private _elem: HTMLElement;\r\n    public get elem(): HTMLElement {\r\n        return this._elem;\r\n    }\r\n\r\n    constructor(private _config:DragDropConfig) {}\r\n\r\n    markSortable(elem: HTMLElement) {\r\n        if (isPresent(this._elem)) {\r\n            this._elem.classList.remove(this._config.onSortableDragClass);\r\n        }\r\n        if (isPresent(elem)) {\r\n            this._elem = elem;\r\n            this._elem.classList.add(this._config.onSortableDragClass);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/dnd/dnd.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 181\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-inverse \\\">\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n        <a class=\\\"nav-link\\\" style=\\\"line-height: 50px; font-size: 20px;\\\" routerLink=\\\"/\\\">DND Demo</a>\\r\\n    </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-lg-9\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 col-lg-3 hidden-md-down\\\">\\r\\n            <side-nav></side-nav>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- <side-nav></side-nav>\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 184\n// module chunks = 1","module.exports = \"import {Component} from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n    selector: 'dnd-simple',\\r\\n    template: `\\r\\n<h4>Simple Drag-and-Drop</h4>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <div class=\\\"card border-dark mb-3\\\">\\r\\n            <div class=\\\"card-header\\\">Available to drag</div>\\r\\n            <div class=\\\"card-body text-dark\\\">\\r\\n\\r\\n                <div class=\\\"card text-white bg-primary mb-3\\\" style=\\\"max-width: 20rem;\\\" \\r\\n                    dnd-draggable [dragEnabled]=\\\"true\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <p class=\\\"card-text\\\">Drag Me</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <div class=\\\"card border-info mb-3\\\" style=\\\"max-width: 20rem;\\\">\\r\\n            <div class=\\\"card-header\\\">Place to drop</div>\\r\\n            <div class=\\\"card-body text-info\\\" \\r\\n                    dnd-droppable (onDropSuccess)=\\\"simpleDrop=simpleDrop + 1\\\">\\r\\n                <p class=\\\"card-text\\\" *ngIf=\\\"simpleDrop\\\">Dropped {{simpleDrop}} times</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>`\\r\\n})\\r\\nexport class DndSimpleComponent {\\r\\n    simpleDrop: number = 0;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/app/examples/dnd/simple/simple.component.ts\n// module id = 185\n// module chunks = 1","module.exports = \"<div class=\\\"bd-sidebar\\\">\\r\\n    <nav>\\r\\n        <div class=\\\"bd-toc-item\\\">\\r\\n            <a class=\\\"bd-toc-link\\\" [routerLink]=\\\"['/components']\\\">\\r\\n                <h4>DEMO Sample</h4>\\r\\n            </a>\\r\\n            <ul class=\\\"nav flex-column\\\">\\r\\n                <li *ngFor=\\\"let component of components\\\" [class.active]=\\\"isActive(['/components', component.toLowerCase(), activeTab])\\\">\\r\\n                    <a [routerLink]=\\\"[component.toLowerCase()]\\\">{{ component }}</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </nav>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/side-nav/side-nav.component.html\n// module id = 186\n// module chunks = 1","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport {Injectable, ChangeDetectorRef, ViewRef} from '@angular/core';\r\nimport {ElementRef} from '@angular/core';\r\n\r\nimport { DragDropConfig, DragImage } from './dnd.config';\r\nimport { DragDropService } from './dnd.service';\r\nimport { isString, isFunction, isPresent, createImage, callFun } from './dnd.utils';\r\n\r\n@Injectable()\r\nexport abstract class AbstractComponent {\r\n    _elem: HTMLElement;\r\n    _dragHandle: HTMLElement;\r\n    _dragHelper: HTMLElement;\r\n    _defaultCursor: string;\r\n\r\n    /**\r\n     * Last element that was mousedown'ed\r\n     */\r\n    _target: EventTarget;\r\n\r\n    /**\r\n     * Whether the object is draggable. Default is true.\r\n     */\r\n    private _dragEnabled: boolean = false;\r\n    set dragEnabled(enabled: boolean) {\r\n        this._dragEnabled = !!enabled;\r\n        this._elem.draggable = this._dragEnabled;\r\n    }\r\n    get dragEnabled(): boolean {\r\n        return this._dragEnabled;\r\n    }\r\n\r\n    /**\r\n     * Allows drop on this element\r\n     */\r\n    dropEnabled: boolean = false;\r\n    /**\r\n     * Drag effect\r\n     */\r\n    effectAllowed: string;\r\n    /**\r\n     * Drag cursor\r\n     */\r\n    effectCursor: string;\r\n\r\n    /**\r\n     * Restrict places where a draggable element can be dropped. Either one of\r\n     * these two mechanisms can be used:\r\n     *\r\n     * - dropZones: an array of strings that permits to specify the drop zones\r\n     *   associated with this component. By default, if the drop-zones attribute\r\n     *   is not specified, the droppable component accepts drop operations by\r\n     *   all the draggable components that do not specify the allowed-drop-zones\r\n     *\r\n     * - allowDrop: a boolean function for droppable components, that is checked\r\n     *   when an item is dragged. The function is passed the dragData of this\r\n     *   item.\r\n     *   - if it returns true, the item can be dropped in this component\r\n     *   - if it returns false, the item cannot be dropped here\r\n     */\r\n    allowDrop: (dropData: any) => boolean;\r\n    dropZones: string[] = [];\r\n\r\n    /**\r\n     * Here is the property dragImage you can use:\r\n     * - The string value as url to the image\r\n     *   <div class=\"panel panel-default\"\r\n     *        dnd-draggable [dragEnabled]=\"true\"\r\n     *        [dragImage]=\"/images/simpler.png\">\r\n     * ...\r\n     * - The DragImage value with Image and optional offset by x and y:\r\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\r\n     * ...\r\n     *   <div class=\"panel panel-default\"\r\n     *        dnd-draggable [dragEnabled]=\"true\"\r\n     *        [dragImage]=\"myDragImage\">\r\n     * ...\r\n     * - The custom function to return the value of dragImage programmatically:\r\n     *   <div class=\"panel panel-default\"\r\n     *        dnd-draggable [dragEnabled]=\"true\"\r\n     *        [dragImage]=\"getDragImage(someData)\">\r\n     * ...\r\n     *   getDragImage(value:any): string {\r\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\r\n     *   }\r\n     */\r\n    dragImage: string | DragImage | Function;\r\n\r\n    cloneItem: boolean = false;\r\n\r\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\r\n        private _cdr: ChangeDetectorRef) {\r\n\r\n        // Assign default cursor unless overridden\r\n        this._defaultCursor = _config.defaultCursor;\r\n        this._elem = elemRef.nativeElement;\r\n        this._elem.style.cursor = this._defaultCursor;  // set default cursor on our element\r\n        //\r\n        // DROP events\r\n        //\r\n        this._elem.ondragenter = (event: Event) => {\r\n            this._onDragEnter(event);\r\n        };\r\n        this._elem.ondragover = (event: DragEvent) => {\r\n            this._onDragOver(event);\r\n            //\r\n            if (event.dataTransfer != null) {\r\n                event.dataTransfer.dropEffect = this._config.dropEffect.name;\r\n            }\r\n\r\n            return false;\r\n        };\r\n        this._elem.ondragleave = (event: Event) => {\r\n            this._onDragLeave(event);\r\n        };\r\n        this._elem.ondrop = (event: Event) => {\r\n            this._onDrop(event);\r\n        };\r\n        //\r\n        // Drag events\r\n        //\r\n        this._elem.onmousedown = (event: MouseEvent) => {\r\n            this._target = event.target;\r\n        };\r\n        this._elem.ondragstart = (event: DragEvent) => {\r\n            if (this._dragHandle) {\r\n                if (!this._dragHandle.contains(<Element>this._target)) {\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this._onDragStart(event);\r\n            //\r\n            if (event.dataTransfer != null) {\r\n                event.dataTransfer.setData('text', '');\r\n                // Change drag effect\r\n                event.dataTransfer.effectAllowed = this.effectAllowed || this._config.dragEffect.name;\r\n                // Change drag image\r\n                if (isPresent(this.dragImage)) {\r\n                    if (isString(this.dragImage)) {\r\n                        (<any>event.dataTransfer).setDragImage(createImage(<string>this.dragImage));\r\n                    } else if (isFunction(this.dragImage)) {\r\n                        (<any>event.dataTransfer).setDragImage(callFun(<Function>this.dragImage));\r\n                    } else {\r\n                        let img: DragImage = <DragImage>this.dragImage;\r\n                        (<any>event.dataTransfer).setDragImage(img.imageElement, img.x_offset, img.y_offset);\r\n                    }\r\n                } else if (isPresent(this._config.dragImage)) {\r\n                    let dragImage: DragImage = this._config.dragImage;\r\n                    (<any>event.dataTransfer).setDragImage(dragImage.imageElement, dragImage.x_offset, dragImage.y_offset);\r\n                } else if (this.cloneItem) {\r\n                    this._dragHelper = <HTMLElement>this._elem.cloneNode(true);\r\n                    this._dragHelper.classList.add('dnd-drag-item');\r\n                    this._dragHelper.style.position = \"absolute\";\r\n                    this._dragHelper.style.top = \"0px\";\r\n                    this._dragHelper.style.left = \"-1000px\";\r\n                    this._elem.parentElement.appendChild(this._dragHelper);\r\n                    (<any>event.dataTransfer).setDragImage(this._dragHelper, event.offsetX, event.offsetY);\r\n                }\r\n\r\n                // Change drag cursor\r\n                let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\r\n\r\n                if (this._dragEnabled) {\r\n                    cursorelem.style.cursor = this.effectCursor ? this.effectCursor : this._config.dragCursor;\r\n                } else {\r\n                    cursorelem.style.cursor = this._defaultCursor;\r\n                }\r\n            }\r\n        };\r\n\r\n        this._elem.ondragend = (event: Event) => {\r\n            if (this._elem.parentElement && this._dragHelper) {\r\n                this._elem.parentElement.removeChild(this._dragHelper);\r\n            }\r\n            // console.log('ondragend', event.target);\r\n            this._onDragEnd(event);\r\n            // Restore style of dragged element\r\n            let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\r\n            cursorelem.style.cursor = this._defaultCursor;\r\n        };\r\n    }\r\n\r\n    public setDragHandle(elem: HTMLElement) {\r\n        this._dragHandle = elem;\r\n    }\r\n    /******* Change detection ******/\r\n\r\n    detectChanges () {\r\n        // Programmatically run change detection to fix issue in Safari\r\n        setTimeout(() => {\r\n            if ( this._cdr && !(this._cdr as ViewRef).destroyed ) {\r\n                this._cdr.detectChanges();\r\n            }\r\n        }, 250);\r\n    }\r\n\r\n    //****** Droppable *******//\r\n    private _onDragEnter(event: Event): void {\r\n        // console.log('ondragenter._isDropAllowed', this._isDropAllowed);\r\n        if (this._isDropAllowed(event)) {\r\n            // event.preventDefault();\r\n            this._onDragEnterCallback(event);\r\n        }\r\n    }\r\n\r\n    private _onDragOver(event: Event) {\r\n        // // console.log('ondragover._isDropAllowed', this._isDropAllowed);\r\n        if (this._isDropAllowed(event)) {\r\n            // The element is over the same source element - do nothing\r\n            if (event.preventDefault) {\r\n                // Necessary. Allows us to drop.\r\n                event.preventDefault();\r\n            }\r\n\r\n            this._onDragOverCallback(event);\r\n        }\r\n    }\r\n\r\n    private _onDragLeave(event: Event): void {\r\n        // console.log('ondragleave._isDropAllowed', this._isDropAllowed);\r\n        if (this._isDropAllowed(event)) {\r\n            // event.preventDefault();\r\n            this._onDragLeaveCallback(event);\r\n        }\r\n    }\r\n\r\n    private _onDrop(event: Event): void {\r\n        // console.log('ondrop._isDropAllowed', this._isDropAllowed);\r\n        if (this._isDropAllowed(event)) {\r\n            // Necessary. Allows us to drop.\r\n            this._preventAndStop(event);\r\n\r\n            this._onDropCallback(event);\r\n\r\n            this.detectChanges();\r\n        }\r\n    }\r\n\r\n    private _isDropAllowed(event: any): boolean {\r\n        if ((this._dragDropService.isDragged || (event.dataTransfer && event.dataTransfer.files)) && this.dropEnabled) {\r\n            // First, if `allowDrop` is set, call it to determine whether the\r\n            // dragged element can be dropped here.\r\n            if (this.allowDrop) {\r\n                return this.allowDrop(this._dragDropService.dragData);\r\n            }\r\n\r\n            // Otherwise, use dropZones if they are set.\r\n            if (this.dropZones.length === 0 && this._dragDropService.allowedDropZones.length === 0) {\r\n                return true;\r\n            }\r\n            for (let i: number = 0; i < this._dragDropService.allowedDropZones.length; i++) {\r\n                let dragZone: string = this._dragDropService.allowedDropZones[i];\r\n                if (this.dropZones.indexOf(dragZone) !== -1) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _preventAndStop(event: Event): any {\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n        if (event.stopPropagation) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    //*********** Draggable **********//\r\n\r\n    private _onDragStart(event: Event): void {\r\n        //console.log('ondragstart.dragEnabled', this._dragEnabled);\r\n        if (this._dragEnabled) {\r\n            this._dragDropService.allowedDropZones = this.dropZones;\r\n            // console.log('ondragstart.allowedDropZones', this._dragDropService.allowedDropZones);\r\n            this._onDragStartCallback(event);\r\n        }\r\n    }\r\n\r\n    private _onDragEnd(event: Event): void {\r\n        this._dragDropService.allowedDropZones = [];\r\n        // console.log('ondragend.allowedDropZones', this._dragDropService.allowedDropZones);\r\n        this._onDragEndCallback(event);\r\n    }\r\n\r\n    //**** Drop Callbacks ****//\r\n    _onDragEnterCallback(event: Event) { }\r\n    _onDragOverCallback(event: Event) { }\r\n    _onDragLeaveCallback(event: Event) { }\r\n    _onDropCallback(event: Event) { }\r\n\r\n    //**** Drag Callbacks ****//\r\n    _onDragStartCallback(event: Event) { }\r\n    _onDragEndCallback(event: Event) { }\r\n}\r\n\r\nexport class AbstractHandleComponent {\r\n    _elem: HTMLElement;\r\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\r\n        private _Component: AbstractComponent, private _cdr: ChangeDetectorRef) {\r\n        this._elem = elemRef.nativeElement;\r\n        this._Component.setDragHandle(this._elem);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/dnd/abstract.component.ts","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\n/**\r\n * Check and return true if an object is type of string\r\n */\r\nexport function isString(obj:any) {\r\n    return typeof obj === \"string\";\r\n}\r\n\r\n/**\r\n * Check and return true if an object not undefined or null\r\n */\r\nexport function isPresent(obj: any) {\r\n    return obj !== undefined && obj !== null;\r\n}\r\n\r\n/**\r\n * Check and return true if an object is type of Function\r\n */\r\nexport function isFunction(obj: any) {\r\n    return typeof obj === \"function\";\r\n}\r\n\r\n/**\r\n * Create Image element with specified url string\r\n */\r\nexport function createImage(src: string) {\r\n    let img:HTMLImageElement = new HTMLImageElement();\r\n    img.src = src;\r\n    return img;\r\n}\r\n\r\n/**\r\n * Call the function\r\n */\r\nexport function callFun(fun: Function) {\r\n    return fun();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/dnd/dnd.utils.ts","import {Component} from '@angular/core';\r\n\r\ndeclare var require: any;\r\n\r\n@Component({\r\n    template: `\r\n<dnd-simple></dnd-simple>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card border-dark mb-3\">\r\n            <div class=\"card-header\">The source code</div>\r\n            <div class=\"card-body text-dark\" style=\"background: #f5f2f0;\">\r\n                <prism-block [code]=\"tsCode\" language=\"ts\"></prism-block>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class SimpleDemoComponent {\r\n    \r\n    tsCode: string = require('!!raw-loader!./simple.component');\r\n}\r\n\r\nexport { DndSimpleComponent } from './simple.component';\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/dnd/simple/index.ts","// Copyright (C) 2016 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PrismComponent } from 'angular-prism';\r\n\r\nimport { routes, dndComponents, sortableComponents } from './demo-dnd.router';\r\nimport { DndModule } from '../../dnd/dnd.module';\r\nimport { DndSimpleComponent } from './dnd/simple';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, DndModule.forRoot(), RouterModule.forChild(routes)],\r\n    declarations: [PrismComponent, ...dndComponents, ...sortableComponents,DndSimpleComponent],\r\n    exports: [...dndComponents, ...sortableComponents]\r\n})\r\nexport class DemoDndModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/examples/index.ts","import { Component, Input } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\nexport const componentsList = [\r\n  'dnd-simple',\r\n  'dnd-zone',\r\n  'dnd-custom-data',\r\n  'dnd-custom-function',\r\n  'dnd-shopping-basket',\r\n  'sortable-simple',\r\n  'sortable-recycle-multi',\r\n  'target-sortable',\r\n  'sortable-simple-copy',\r\n  'sortable-multi',\r\n  'sortable-embedded',\r\n];\r\n\r\n@Component({\r\n  selector: 'side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n})\r\nexport class SideNavComponent {\r\n  @Input() activeTab: String;\r\n  components = componentsList;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  isActive(currentRoute: any[]): boolean {\r\n    return this.router.isActive(this.router.createUrlTree(currentRoute), true);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/side-nav/side-nav.component.ts","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\r\n\r\nimport {DragDropConfig} from './dnd.config';\r\nimport {DragDropService, DragDropSortableService, dragDropServiceFactory, dragDropSortableServiceFactory} from './dnd.service';\r\nimport {DraggableComponent, DraggableHandleComponent} from './draggable.component';\r\nimport {DroppableComponent} from './droppable.component';\r\nimport {SortableContainer, SortableComponent, SortableHandleComponent} from './sortable.component';\r\n\r\nexport * from './abstract.component';\r\nexport * from './dnd.config';\r\nexport * from './dnd.service';\r\nexport * from './draggable.component';\r\nexport * from './droppable.component';\r\nexport * from './sortable.component';\r\n\r\nexport let providers = [\r\n    DragDropConfig,\r\n    { provide: DragDropService, useFactory: dragDropServiceFactory },\r\n    { provide: DragDropSortableService, useFactory: dragDropSortableServiceFactory, deps: [DragDropConfig] }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\r\n  exports : [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\r\n\r\n})\r\nexport class DndModule {\r\n  static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: DndModule,\r\n            providers: providers\r\n        };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/dnd/dnd.module.ts","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport {ChangeDetectorRef} from '@angular/core';\r\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\r\n\r\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\r\nimport {DragDropConfig, DragImage} from './dnd.config';\r\nimport {DragDropService, DragDropData} from './dnd.service';\r\n\r\n@Directive({ selector: '[dnd-draggable]' })\r\nexport class DraggableComponent extends AbstractComponent {\r\n\r\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\r\n        this.dragEnabled = !!value;\r\n    }\r\n\r\n    /**\r\n     * Callback function called when the drag actions happened.\r\n     */\r\n    @Output() onDragStart: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n    @Output() onDragEnd: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n\r\n    /**\r\n     * The data that has to be dragged. It can be any JS object\r\n     */\r\n    @Input() dragData: any;\r\n\r\n    /**\r\n     * Callback function called when the drag action ends with a valid drop action.\r\n     * It is activated after the on-drop-success callback\r\n     */\r\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\r\n        this.dropZones = value;\r\n    }\r\n\r\n    /**\r\n     * Drag allowed effect\r\n     */\r\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\r\n        this.effectAllowed = value;\r\n    }\r\n\r\n    /**\r\n     * Drag effect cursor\r\n     */\r\n    @Input(\"effectCursor\") set effectcursor(value: string) {\r\n        this.effectCursor = value;\r\n    }\r\n\r\n    /**\r\n     * Here is the property dragImage you can use:\r\n     * - The string value as url to the image\r\n     *   <div class=\"panel panel-default\"\r\n     *        dnd-draggable [dragEnabled]=\"true\"\r\n     *        [dragImage]=\"/images/simpler.png\">\r\n     * ...\r\n     * - The DragImage value with Image and offset by x and y:\r\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\r\n     * ...\r\n     *   <div class=\"panel panel-default\"\r\n     *        dnd-draggable [dragEnabled]=\"true\"\r\n     *        [dragImage]=\"myDragImage\">\r\n     * ...\r\n     * - The custom function to return the value of dragImage programmatically:\r\n     *   <div class=\"panel panel-default\"\r\n     *        dnd-draggable [dragEnabled]=\"true\"\r\n     *        [dragImage]=\"getDragImage(someData)\">\r\n     * ...\r\n     *   getDragImage(value:any): string {\r\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\r\n     *   }\r\n     */\r\n    @Input() dragImage: string | DragImage | Function;\r\n\r\n    \r\n    @Input() cloneItem: boolean;\r\n\r\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\r\n        cdr:ChangeDetectorRef) {\r\n\r\n        super(elemRef, dragDropService, config, cdr);\r\n        this._defaultCursor = this._elem.style.cursor;\r\n        this.dragEnabled = true;\r\n    }\r\n\r\n    _onDragStartCallback(event: MouseEvent) {\r\n        this._dragDropService.isDragged = true;\r\n        this._dragDropService.dragData = this.dragData;\r\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\r\n        this._elem.classList.add(this._config.onDragStartClass);\r\n        //\r\n        this.onDragStart.emit({dragData: this.dragData, mouseEvent: event});\r\n    }\r\n\r\n    _onDragEndCallback(event: MouseEvent) {\r\n        this._dragDropService.isDragged = false;\r\n        this._dragDropService.dragData = null;\r\n        this._dragDropService.onDragSuccessCallback = null;\r\n        this._elem.classList.remove(this._config.onDragStartClass);\r\n        //\r\n        this.onDragEnd.emit({dragData: this.dragData, mouseEvent: event});\r\n    }\r\n}\r\n\r\n\r\n@Directive({ selector: '[dnd-draggable-handle]' })\r\nexport class DraggableHandleComponent extends AbstractHandleComponent {\r\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: DraggableComponent,\r\n        cdr:ChangeDetectorRef) {\r\n\r\n        super(elemRef, dragDropService, config, _Component, cdr);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/dnd/draggable.component.ts","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport {ChangeDetectorRef} from '@angular/core';\r\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\r\n\r\nimport {AbstractComponent} from './abstract.component';\r\nimport {DragDropConfig} from './dnd.config';\r\nimport {DragDropService, DragDropData} from './dnd.service';\r\n\r\n@Directive({ selector: '[dnd-droppable]' })\r\nexport class DroppableComponent extends AbstractComponent {\r\n\r\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\r\n        this.dropEnabled = !!value;\r\n    }\r\n\r\n    /**\r\n     * Callback function called when the drop action completes correctly.\r\n     * It is activated before the on-drag-success callback.\r\n     */\r\n    @Output() onDropSuccess: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n    @Output() onDragEnter: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n    @Output() onDragOver: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n    @Output() onDragLeave: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n\r\n    @Input(\"allowDrop\") set allowdrop(value: (dropData: any) => boolean) {\r\n        this.allowDrop = value;\r\n    }\r\n\r\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\r\n        this.dropZones = value;\r\n    }\r\n\r\n    /**\r\n     * Drag allowed effect\r\n     */\r\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\r\n        this.effectAllowed = value;\r\n    }\r\n\r\n    /**\r\n     * Drag effect cursor\r\n     */\r\n    @Input(\"effectCursor\") set effectcursor(value: string) {\r\n        this.effectCursor = value;\r\n    }\r\n\r\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\r\n        cdr:ChangeDetectorRef) {\r\n\r\n        super(elemRef, dragDropService, config, cdr);\r\n\r\n        this.dropEnabled = true;\r\n    }\r\n\r\n    _onDragEnterCallback(event: MouseEvent) {\r\n        if (this._dragDropService.isDragged) {\r\n            this._elem.classList.add(this._config.onDragEnterClass);\r\n            this.onDragEnter.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\r\n        }\r\n    }\r\n\r\n    _onDragOverCallback (event: MouseEvent) {\r\n        if (this._dragDropService.isDragged) {\r\n            this._elem.classList.add(this._config.onDragOverClass);\r\n            this.onDragOver.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\r\n        }\r\n    };\r\n\r\n    _onDragLeaveCallback (event: MouseEvent) {\r\n        if (this._dragDropService.isDragged) {\r\n            this._elem.classList.remove(this._config.onDragOverClass);\r\n            this._elem.classList.remove(this._config.onDragEnterClass);\r\n            this.onDragLeave.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\r\n        }\r\n    };\r\n\r\n    _onDropCallback (event: MouseEvent) {\r\n        let dataTransfer = (event as any).dataTransfer;\r\n        if (this._dragDropService.isDragged || (dataTransfer && dataTransfer.files)) {\r\n            this.onDropSuccess.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\r\n            if (this._dragDropService.onDragSuccessCallback) {\r\n                this._dragDropService.onDragSuccessCallback.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\r\n            }\r\n            this._elem.classList.remove(this._config.onDragOverClass);\r\n            this._elem.classList.remove(this._config.onDragEnterClass);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/dnd/droppable.component.ts","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { Directive, Input, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { FormArray } from '@angular/forms';\r\n\r\nimport { AbstractComponent, AbstractHandleComponent } from './abstract.component';\r\nimport { DragDropConfig } from './dnd.config';\r\nimport { DragDropService, DragDropSortableService } from './dnd.service';\r\n\r\n@Directive({ selector: '[dnd-sortable-container]' })\r\nexport class SortableContainer extends AbstractComponent {\r\n\r\n    _dragCopy: boolean = false;\r\n\r\n    @Input(\"dragEnabled\") set draggable(value: boolean) {\r\n        this.dragEnabled = !!value;\r\n    }\r\n\r\n    @Input() set dragCopy(value: boolean) {\r\n        this._dragCopy = !!value;\r\n    }\r\n\r\n    get dragCopy(): boolean {\r\n        return this._dragCopy;\r\n    }\r\n\r\n    private _sortableData: Array<any> | FormArray = [];\r\n    private sortableHandler: SortableFormArrayHandler | SortableArrayHandler;\r\n\r\n    @Input() set sortableData(sortableData: Array<any> | FormArray) {\r\n        this._sortableData = sortableData;\r\n        if (sortableData instanceof FormArray) {\r\n            this.sortableHandler = new SortableFormArrayHandler();\r\n        } else {\r\n            this.sortableHandler = new SortableArrayHandler();\r\n        }\r\n        //\r\n        this.dropEnabled = !!this._sortableData;\r\n        // console.log(\"collection is changed, drop enabled: \" + this.dropEnabled);\r\n    }\r\n    get sortableData(): Array<any> | FormArray {\r\n        return this._sortableData;\r\n    }\r\n\r\n    @Input(\"dropZones\") set dropzones(value: Array<string>) {\r\n        this.dropZones = value;\r\n    }\r\n\r\n    constructor(private elemRef: ElementRef, dragDropService: DragDropService, config: DragDropConfig, cdr: ChangeDetectorRef,\r\n        private _sortableDataService: DragDropSortableService) {\r\n\r\n        super(elemRef, dragDropService, config, cdr);\r\n        this.dragEnabled = false;\r\n    }\r\n\r\n    getId() {\r\n        return this.elemRef.nativeElement.getAttribute('id');\r\n    }\r\n\r\n    _onDragEnterCallback(event: Event) {\r\n        if (this._sortableDataService.isDragged) {\r\n            let item: any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\r\n            // Check does element exist in sortableData of this Container\r\n            if (this.indexOf(item) === -1) {\r\n                // Let's add it\r\n                // console.log('Container._onDragEnterCallback. drag node [' + this._sortableDataService.index.toString() + '] over parent node');\r\n                // Remove item from previouse list except that sourceList dragCopy is true\r\n                if (!this._sortableDataService.sortableContainer.dragCopy) {\r\n                    this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\r\n                }else{\r\n                    if(this._sortableDataService.sortableContainer.getId()===this.getId()){\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                if (this._sortableDataService.sortableContainer._sortableData.length === 0) {\r\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\r\n                }\r\n                // Add item to new list\r\n                this.insertItemAt(item, 0);\r\n                this._sortableDataService.sortableContainer = this;\r\n                this._sortableDataService.index = 0;\r\n            }\r\n            // Refresh changes in properties of container component\r\n            this.detectChanges();\r\n        }\r\n    }\r\n\r\n    getItemAt(index: number): any {\r\n        return this.sortableHandler.getItemAt(this._sortableData, index);\r\n    }\r\n\r\n    indexOf(item: any): number {\r\n        return this.sortableHandler.indexOf(this._sortableData, item);\r\n    }\r\n\r\n    removeItemAt(index: number): void {\r\n        this.sortableHandler.removeItemAt(this._sortableData, index);\r\n    }\r\n\r\n    insertItemAt(item: any, index: number) {\r\n        this.sortableHandler.insertItemAt(this._sortableData, item, index);\r\n    }\r\n}\r\n\r\nclass SortableArrayHandler {\r\n    getItemAt(sortableData: any, index: number): any {\r\n        return sortableData[index];\r\n    }\r\n\r\n    indexOf(sortableData: any, item: any): number {\r\n        return sortableData.indexOf(item);\r\n    }\r\n\r\n    removeItemAt(sortableData: any, index: number) {\r\n        sortableData.splice(index, 1);\r\n    }\r\n\r\n    insertItemAt(sortableData: any, item: any, index: number) {\r\n        sortableData.splice(index, 0, item);\r\n    }\r\n}\r\n\r\nclass SortableFormArrayHandler {\r\n    getItemAt(sortableData: any, index: number): any {\r\n        return sortableData.at(index);\r\n    }\r\n\r\n    indexOf(sortableData: any, item: any): number {\r\n        return sortableData.controls.indexOf(item);\r\n    }\r\n\r\n    removeItemAt(sortableData: any, index: number) {\r\n        sortableData.removeAt(index);\r\n    }\r\n\r\n    insertItemAt(sortableData: any, item: any, index: number) {\r\n        sortableData.insert(index, item);\r\n    }\r\n}\r\n\r\n@Directive({ selector: '[dnd-sortable]' })\r\nexport class SortableComponent extends AbstractComponent {\r\n\r\n    @Input('sortableIndex') index: number;\r\n\r\n    @Input(\"dragEnabled\") set draggable(value: boolean) {\r\n        this.dragEnabled = !!value;\r\n    }\r\n\r\n    @Input(\"dropEnabled\") set droppable(value: boolean) {\r\n        this.dropEnabled = !!value;\r\n    }\r\n\r\n    /**\r\n     * The data that has to be dragged. It can be any JS object\r\n     */\r\n    @Input() dragData: any;\r\n\r\n    /**\r\n     * Drag allowed effect\r\n     */\r\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\r\n        this.effectAllowed = value;\r\n    }\r\n\r\n    /**\r\n     * Drag effect cursor\r\n     */\r\n    @Input(\"effectCursor\") set effectcursor(value: string) {\r\n        this.effectCursor = value;\r\n    }\r\n\r\n    /**\r\n     * Callback function called when the drag action ends with a valid drop action.\r\n     * It is activated after the on-drop-success callback\r\n     */\r\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output(\"onDragStart\") onDragStartCallback: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output(\"onDragOver\") onDragOverCallback: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output(\"onDragEnd\") onDragEndCallback: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output(\"onDropSuccess\") onDropSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config: DragDropConfig,\r\n        private _sortableContainer: SortableContainer,\r\n        private _sortableDataService: DragDropSortableService,\r\n        cdr: ChangeDetectorRef) {\r\n        super(elemRef, dragDropService, config, cdr);\r\n        this.dropZones = this._sortableContainer.dropZones;\r\n        this.dragEnabled = true;\r\n        this.dropEnabled = true;\r\n    }\r\n\r\n    _onDragStartCallback(event: Event) {\r\n       \r\n        // console.log('_onDragStartCallback. dragging elem with index ' + this.index);\r\n        this._sortableDataService.sortableContainer = this._sortableContainer;\r\n        this._sortableDataService.index = this.index;\r\n        this._sortableDataService.isDragged = true;\r\n        this._sortableDataService.markSortable(this._elem);\r\n       \r\n        // Add dragData\r\n        this._dragDropService.isDragged = true;\r\n        this._dragDropService.dragData = this.dragData;\r\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\r\n        //\r\n        this.onDragStartCallback.emit(this._dragDropService.dragData);\r\n    }\r\n\r\n    _onDragOverCallback(event: Event) {\r\n        if (this._sortableDataService.isDragged && this._elem !== this._sortableDataService.elem) {\r\n            // console.log('_onDragOverCallback. dragging elem with index ' + this.index);\r\n            this._sortableDataService.sortableContainer = this._sortableContainer;\r\n            this._sortableDataService.index = this.index;\r\n            this._sortableDataService.markSortable(this._elem);\r\n            this.onDragOverCallback.emit(this._dragDropService.dragData);\r\n        }\r\n    }\r\n\r\n    _onDragEndCallback(event: Event) {\r\n        // console.log('_onDragEndCallback. end dragging elem with index ' + this.index);\r\n        this._sortableDataService.isDragged = false;\r\n        this._sortableDataService.sortableContainer = null;\r\n        this._sortableDataService.index = null;\r\n        this._sortableDataService.markSortable(null);\r\n        // Add dragGata\r\n        this._dragDropService.isDragged = false;\r\n        this._dragDropService.dragData = null;\r\n        this._dragDropService.onDragSuccessCallback = null;\r\n        //\r\n        this.onDragEndCallback.emit(this._dragDropService.dragData);\r\n    }\r\n\r\n    _onDragEnterCallback(event: Event) {\r\n        if (this._sortableDataService.isDragged) {\r\n            // console.log(this._sortableDataService.sortableContainer.getId())\r\n            this._sortableDataService.markSortable(this._elem);\r\n            if ((this.index !== this._sortableDataService.index) ||\r\n                (this._sortableDataService.sortableContainer.sortableData !== this._sortableContainer.sortableData)) {\r\n                // console.log('Component._onDragEnterCallback. drag node [' + this.index + '] over node [' + this._sortableDataService.index + ']');\r\n                // Get item\r\n                let item: any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\r\n                // Remove item from previouse list\r\n                if (!this._sortableDataService.sortableContainer.dragCopy) {\r\n                    this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\r\n                    // console.log(this._sortableDataService.sortableContainer.getId(),this._sortableDataService.sortableContainer.dragCopy)\r\n                }else{\r\n                    if(this._sortableDataService.sortableContainer.getId()===this._sortableContainer.getId()){\r\n                        return;\r\n                    }\r\n                }\r\n                if (this._sortableDataService.sortableContainer.sortableData.length === 0) {\r\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\r\n                }\r\n                // Add item to new list\r\n                this._sortableContainer.insertItemAt(item, this.index);\r\n                if (this._sortableContainer.dropEnabled) {\r\n                    this._sortableContainer.dropEnabled = false;\r\n                }\r\n                this._sortableDataService.sortableContainer = this._sortableContainer;\r\n                this._sortableDataService.index = this.index;\r\n                this.detectChanges();\r\n            }\r\n        }\r\n    }\r\n\r\n    _onDropCallback(event: Event) {\r\n        if (this._sortableDataService.isDragged) {\r\n            // console.log('onDropCallback.onDropSuccessCallback.dragData', this._dragDropService.dragData);\r\n            this.onDropSuccessCallback.emit(this._dragDropService.dragData);\r\n            if (this._dragDropService.onDragSuccessCallback) {\r\n                // console.log('onDropCallback.onDragSuccessCallback.dragData', this._dragDropService.dragData);\r\n                this._dragDropService.onDragSuccessCallback.emit(this._dragDropService.dragData);\r\n            }\r\n            // Refresh changes in properties of container component\r\n            this._sortableContainer.detectChanges();\r\n        }\r\n    }\r\n}\r\n\r\n@Directive({ selector: '[dnd-sortable-handle]' })\r\nexport class SortableHandleComponent extends AbstractHandleComponent {\r\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config: DragDropConfig, _Component: SortableComponent,\r\n        cdr: ChangeDetectorRef) {\r\n\r\n        super(elemRef, dragDropService, config, _Component, cdr);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/dnd/sortable.component.ts"],"sourceRoot":""}